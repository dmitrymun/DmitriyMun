&НаКлиенте
Процедура ПрочитатьТекст(Команда)
	
	Если ЗначениеЗаполнено(СокрЛП(Объект.ФайлСТекстом)) Тогда
		
		Попытка
			ДокументWord	= Новый COMОбъект("Word.Application"); 
			ДокументWord.Documents.Open(СокрЛП(Объект.ФайлСТекстом));
			
			Документ	= ДокументWord.ActiveDocument();
			// перебирая строки получаем весь текст
			Текст	= "";
			Для i = 1 по Документ.Sentences.Count Цикл
				Текст	= Текст + Документ.Sentences(i).Text + Символы.ПС;  	
			КонецЦикла;
			
			Документ.Close(); 
			ДокументWord.Quit();
			
			Объект.ТекстWord	= СокрЛП(Текст)
			
		Исключение
			Сообщить("Не удалось подключиться / открыть файл MS Word")
		КонецПопытки;
		
	Иначе
		Сообщить("Укажите файл формата MS Word с текстом")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлСТекстомНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	Текст = "ru = ""документ MS Word""; en = ""MS Word""";
	
	СтандартнаяОбработка		= Ложь;
	Диалог						= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок			= "Выберите файл";
	Диалог.ПолноеИмяФайла		= ""; 
	Фильтр						= НСтр(Текст) + "(*.docx)|*.docx| (*.doc)|*.doc";; 
	Диалог.Фильтр				= Фильтр; 
    Диалог.МножественныйВыбор	= Ложь;
	Если Диалог.Выбрать() Тогда
		Объект.ФайлСТекстом	= Диалог.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АнализТекста(Команда)
	Если ЗначениеЗаполнено(Объект.ТекстWord) Тогда
		АнализТекстаНаСервере(Объект.ТекстWord);
		ПодсчетСуммПодвала();
	Иначе
		Сообщить("Не прочитан текст из файла формата MS Word")
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТекстЗапроса_ПолучитьСписокКлючевыхВыражений()
	
	Возврат "ВЫБРАТЬ
	        |	КлючевыеВыраженияЗначенияТо.Ссылка.Ссылка КАК Ссылка,
	        |	КлючевыеВыраженияЗначенияТо.Ссылка.Наименование КАК ПолеЕсли,
	        |	КлючевыеВыраженияЗначенияТо.ПолеТо КАК ПолеТо
	        |ИЗ
	        |	Справочник.КлючевыеВыражения.ЗначенияТо КАК КлючевыеВыраженияЗначенияТо
	        |ГДЕ
	        |	НЕ КлючевыеВыраженияЗначенияТо.Ссылка.ПометкаУдаления"
	
КонецФункции

&НаСервере
Функция ПолучитьСписокКлючевыхВыражений()
	
	Запрос	= Новый Запрос(
							ТекстЗапроса_ПолучитьСписокКлючевыхВыражений()
						  );
	Результат	= Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Новый ТаблицаЗначений
	Иначе
		Возврат Результат.Выгрузить()
	КонецЕсли;

КонецФункции

&НаСервере
Процедура АнализТекстаНаСервере( Знач ИсходныйТекст )
	
	Объект.Шаблоны.Очистить();
	
	таблКлючевыхВыражений	= ПолучитьСписокКлючевыхВыражений();
	
	Для Каждого строкаКлючевогоВыражения Из таблКлючевыхВыражений Цикл
		Если СтрНайти(НРег(ИсходныйТекст), НРег(СокрЛП(строкаКлючевогоВыражения.ПолеЕсли)), НаправлениеПоиска.СНачала, 1, 1) > 0 Тогда
			строкаШаблона					= Объект.Шаблоны.Добавить();
			строкаШаблона.ПолеЕсли			= строкаКлючевогоВыражения.Ссылка;
			строкаШаблона.ПолеТо			= строкаКлючевогоВыражения.ПолеТо;
			строкаШаблона.ВремяВыполнения	= строкаКлючевогоВыражения.ВремяВыполнения;
		КонецЕсли;
	КонецЦикла;
	
	// проверка на дубли поля Если
	таблВрем	= Объект.Шаблоны.Выгрузить();
	таблВрем.Свернуть("ПолеЕсли");
	
	таблНовая	= Объект.Шаблоны.Выгрузить();
	таблНовая.Очистить();
	
	Для Каждого строкаВрем Из таблВрем Цикл
		Для Каждого строкаД Из Объект.Шаблоны Цикл
			Если строкаВрем.ПолеЕсли = строкаД.ПолеЕсли Тогда
				ЗаписиНет	= Истина;
				Для Каждого строкаНовая Из таблНовая Цикл
					Если строкаНовая.ПолеЕсли = строкаВрем.ПолеЕсли Тогда
						ЗаписиНет	= Ложь;
					КонецЕсли;
				КонецЦикла;
				Если ЗаписиНет Тогда
					ЗаполнитьЗначенияСвойств(таблНовая.Добавить(), строкаД)
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// { +++ поиск по ВременнаяТаблица6
 	таблНовая	= ДоработатьСписок(таблНовая);
	
 	Объект.Шаблоны.Загрузить(таблНовая);
 	// --- }
	//Возврат;
	// 
	УровеньПоддержки = 3;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ЗаявкиСписокУсловий.ПолеЕсли КАК ПолеЕсли,
		//|КОЛИЧЕСТВО (ЗаявкиСписокУсловий.Ссылка) КАК КоличествоДублей
		//|ИЗ
		//|	Справочник.Заявки.СписокУсловий КАК ЗаявкиСписокУсловий
		//|СГРУППИРОВАТЬ ПО
		//|ЗаявкиСписокУсловий.ПолеЕсли
		//| ИМЕЮЩИЕ 
		//| КОЛИЧЕСТВО(ЗаявкиСписокУсловий.Ссылка) >= &УП";
		"ВЫБРАТЬ
		|	Заявки2.ПолеЕсли КАК ПолеЕсли,
		|КОЛИЧЕСТВО (Заявки2.Ссылка) КАК КоличествоДублей
		|ИЗ
		|	Справочник.Заявки2 КАК Заявки2
		|СГРУППИРОВАТЬ ПО
		|Заявки2.ПолеЕсли
		| ИМЕЮЩИЕ 
		| КОЛИЧЕСТВО(Заявки2.Ссылка) >= &УП"; 
	Запрос.УстановитьПараметр("УП",УровеньПоддержки);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Массив1 = Новый Массив;
	Массив2 = Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Сообщить  ("Выражение " + ВыборкаДетальныеЗаписи.ПолеЕсли + " Частота " + ВыборкаДетальныеЗаписи.КоличествоДублей);
		Массив1.Добавить(ВыборкаДетальныеЗаписи.ПолеЕсли);
		Массив2.Добавить(ВыборкаДетальныеЗаписи.ПолеЕсли);
	КонецЦикла;

	Для Каждого ЭлементМассива1 из Массив1 Цикл
    КонецЦикла;
    Для Каждого ЭлементМассива2 из Массив2 Цикл
	КонецЦикла;
	
	Кол1= Массив1.Количество();
	Кол2 = Массив2.Количество();
	
	Массив3 = Новый Массив (Кол1,Кол2);
	Индекс = 0;
		Для Ин = Индекс По Массив3.Количество() - 1 Цикл
			Индекс1 = 0;
			Для Ин1 = Индекс1 По Массив3.Количество() - 1 Цикл

	Массив3[Индекс][0] = Массив1[Индекс];
	Массив3[Индекс][1] = Массив2[Индекс1];
	Индекс1 = Индекс1 + 1;
	a1 = Массив3[Индекс][0];
	a2=  Массив3[Индекс][1];
	Если a1 <> a2 тогда
	ДвЭлНабор = Массив3[Индекс][0] + "," + Массив3[Индекс][1];
	ВремТ = Справочники.ВременнаяТаблица;
	ВремТНовЗап= ВремТ.СоздатьЭлемент();
    ВремТНовЗап.Наименование = ДвЭлНабор;
	ВремТНовЗап.Записать();
	
	ВремТ2 = Справочники.ВременнаяТаблица2;
	ВремТ3 = Справочники.ВременнаяТаблица3;
	ВремТНовЗап3 = ВремТ3.СоздатьЭлемент();
    СтрокаСРазделителями = ДвЭлНабор;
 МассивСтрок = СтрРазделить(СтрокаСРазделителями, ",");
  N=0;
 Для Каждого ТекСтрока Из МассивСтрок Цикл
ВремТНовЗап2= ВремТ2.СоздатьЭлемент();
 ВремТНовЗап2.Наименование = ТекСтрока;
 ВремТНовЗап2.НомерНабора = N;
 ВремТНовЗап2.Записать();
 N = N + 1;
  
 Если ВремТНовЗап2.НомерНабора = 0 тогда
 ВремТНовЗап3.Элемент1 = ТекСтрока;
 ВремТНовЗап3.Записать();
иначе
ВремТНовЗап3.Элемент2 = ТекСтрока;
ВремТНовЗап3.Записать();	
КонецЕсли; 

Эл1= ВремТНовЗап3.Элемент1;

Запрос3 = Новый Запрос;
	Запрос3.Текст = 
	   //"ВЫБРАТЬ
	   // |   РАЗЛИЧНЫЕ Заявки.НомерЗаявки КАК НомерЗаявки
	   // |ИЗ
	   // |	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
	   // |	Справочник.Заявки   КАК Заявки
	   // |ГДЕ
	   // |Заявки.СписокУсловий.ПолеЕсли = &Эл1";
		"ВЫБРАТЬ
		|   РАЗЛИЧНЫЕ Заявки2.НомерЗаявки КАК НомерЗаявки
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
		|	Справочник.Заявки2   КАК Заявки2
	    |ГДЕ
		|Заявки2.ПолеЕсли = &Эл1";
	Запрос3.УстановитьПараметр("Эл1",Эл1);
	РезультатЗапроса3 = Запрос3.Выполнить();
	Массив5 = Новый Массив;
	ВыборкаДетальныеЗаписи3 = РезультатЗапроса3.Выбрать();
		Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл
   Массив5.Добавить (ВыборкаДетальныеЗаписи3.НомерЗаявки);
		КонецЦикла;
Для Каждого ЭлементМассива5 из Массив5 Цикл
КонецЦикла;
   Эл2= ВремТНовЗап3.Элемент2;
	Запрос4 = Новый Запрос;
	Запрос4.Текст = 
		//"ВЫБРАТЬ
		//|   РАЗЛИЧНЫЕ Заявки.НомерЗаявки КАК НомерЗаявки
		//|ИЗ
		//|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
		//|	Справочник.Заявки   КАК Заявки
		//|ГДЕ
		//|Заявки.СписокУсловий.ПолеЕсли = &Эл2";
		"ВЫБРАТЬ
		|   РАЗЛИЧНЫЕ Заявки2.НомерЗаявки КАК НомерЗаявки
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
		|	Справочник.Заявки2   КАК Заявки2
	    |ГДЕ
		|Заявки2.ПолеЕсли = &Эл2";
	Запрос4.УстановитьПараметр("Эл2",Эл2);
	РезультатЗапроса4 = Запрос4.Выполнить();
	Массив6 = Новый Массив;
	ВыборкаДетальныеЗаписи4 = РезультатЗапроса4.Выбрать();
		Пока ВыборкаДетальныеЗаписи4.Следующий() Цикл
		Если  ВыборкаДетальныеЗаписи4.НомерЗаявки = ЭлементМассива5 тогда   
		Массив6.Добавить (ВыборкаДетальныеЗаписи4.НомерЗаявки);
		ВремТНовЗап3.НомерЗаявки = ВыборкаДетальныеЗаписи4.НомерЗаявки;
		ВремТНовЗап3.Записать();
	    КонецЕсли;	
		КонецЦикла;
		Для Каждого ЭлементМассива6 из Массив6 Цикл
		КонецЦикла;
  	 КонецЦикла;
 КонецЕСли;
КонецЦикла;
	Индекс = Индекс+1;
КонецЦикла;
Массив8 = Новый Массив;	
	Запрос6 = Новый Запрос;
	Запрос6.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица3.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица3.Элемент2 КАК Элемент2,
		|   ВременнаяТаблица3.Код КАК Код
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3";
	РезультатЗапроса6 = Запрос6.Выполнить();
	ВыборкаДетальныеЗаписи6 = РезультатЗапроса6.Выбрать();
	Пока ВыборкаДетальныеЗаписи6.Следующий() Цикл   
Запрос7 = Новый Запрос;
Запрос7.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица3.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица3.Элемент2 КАК Элемент2
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3
		|ГДЕ 
		|ВременнаяТаблица3.Элемент1 = &ЭлМас8";
	Запрос7.УстановитьПараметр("ЭлМас8",ВыборкаДетальныеЗаписи6.Элемент2);
	РезультатЗапроса7 = Запрос7.Выполнить();
	ВыборкаДетальныеЗаписи7 = РезультатЗапроса7.Выбрать();
		Пока ВыборкаДетальныеЗаписи7.Следующий() Цикл
 			q1 = справочники.ВременнаяТаблица3;
			q1_1 = q1.НайтиПоКоду(ВыборкаДетальныеЗаписи6.Код).ПолучитьОбъект();
			Если ПустаяСтрока (q1_1.Комментарий)  тогда
			q1_1.Комментарий = "+"; 
			q1_1.Записать();
		КонецЕсли;   
 Запрос11 = Новый Запрос;
 Запрос11.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица3.Код,
		|   ВременнаяТаблица3.Элемент2 КАК Элемент2
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3
		|ГДЕ 
		|ВременнаяТаблица3.Элемент2 = &ЭлМас9";
	Запрос11.УстановитьПараметр("ЭлМас9",ВыборкаДетальныеЗаписи6.Элемент1);
	РезультатЗапроса11 = Запрос11.Выполнить();
	ВыборкаДетальныеЗаписи11 = РезультатЗапроса11.Выбрать();
		  Пока ВыборкаДетальныеЗаписи11.Следующий() Цикл   
		q2 = справочники.ВременнаяТаблица3;
		q2_1 = q2.НайтиПоКоду(ВыборкаДетальныеЗаписи11.Код).ПолучитьОбъект(); 
		Если  ПустаяСтрока (q2_1.Комментарий) и q2_1.Элемент2 = q1_1.Элемент1 тогда
		q2_1.Комментарий = "-"; 
		q2_1.Записать();
		КонецЕсли; 	
	КонецЦикла;
		КонецЦикла;	
 Запрос8 = Новый Запрос;
 Запрос8.Текст = 
		//"ВЫБРАТЬ
		//|   Заявки.НомерЗаявки КАК НомерЗаявки
		//|ИЗ
		//|	Справочник.Заявки   КАК Заявки
		//|ГДЕ 
		//|Заявки.СписокУсловий.ПолеЕсли = &Эл1изТ3";
		"ВЫБРАТЬ
		|   Заявки2.НомерЗаявки КАК НомерЗаявки
		|ИЗ
		|	Справочник.Заявки2   КАК Заявки2
		|ГДЕ 
		|Заявки2.ПолеЕсли = &Эл1изТ3";
Запрос8.УстановитьПараметр("Эл1изТ3",ВыборкаДетальныеЗаписи6.Элемент1); 
РезультатЗапроса8 = Запрос8.Выполнить();
ВыборкаДетальныеЗаписи8 = РезультатЗапроса8.Выбрать();
колво1 = 0; 
Пока ВыборкаДетальныеЗаписи8.Следующий() Цикл
Запрос10 = Новый Запрос;
Запрос10.Текст = 
		//"ВЫБРАТЬ
		//|   Заявки.НомерЗаявки КАК НомерЗаявки
		//|ИЗ 
		//|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
		//|	Справочник.Заявки   КАК Заявки
		//|ГДЕ 
		//|Заявки.НомерЗаявки = &НомЗ
		//|И
		//|Заявки.СписокУсловий.ПолеЕсли = &Эл2изТ3
		//|И
		//|Заявки.СписокУсловий.ПолеЕсли <> &Эл1изТ3";
		"ВЫБРАТЬ
		|   Заявки2.НомерЗаявки КАК НомерЗаявки
		|ИЗ 
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3,
		|	Справочник.Заявки2   КАК Заявки2
		|ГДЕ 
		|Заявки2.НомерЗаявки = &НомЗ
		|И
		|Заявки2.ПолеЕсли = &Эл2изТ3
		|И
        |Заявки2.ПолеЕсли <> &Эл1изТ3";
 Запрос10.УстановитьПараметр("НомЗ",ВыборкаДетальныеЗаписи8.НомерЗаявки);
 Запрос10.УстановитьПараметр("Эл2изТ3",ВыборкаДетальныеЗаписи6.Элемент2);
 Запрос10.УстановитьПараметр("Эл1изТ3",ВыборкаДетальныеЗаписи6.Элемент1); 
РезультатЗапроса10 = Запрос10.Выполнить();
ВыборкаДетальныеЗаписи10 = РезультатЗапроса10.Выбрать();
Пока ВыборкаДетальныеЗаписи10.Следующий() Цикл 
Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи10.НомерЗаявки) = истина тогда  
	   колво1 = колво1 + 1;  
КонецЕсли;
	  КонецЦикла;
КонецЦикла;
КонецЦикла;
Запрос14 = Новый Запрос;
Запрос14.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица3.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица3.Элемент2 КАК Элемент2,
		|   ВременнаяТаблица3.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.ВременнаяТаблица3   КАК ВременнаяТаблица3";
РезультатЗапроса14 = Запрос14.Выполнить();
ВыборкаДетальныеЗаписи14 = РезультатЗапроса14.Выбрать();
Пока ВыборкаДетальныеЗаписи14.Следующий() Цикл 
Табл1 = Справочники.ВременнаяТаблица4;
Табл1_1 = Табл1.СоздатьЭлемент();
Табл1_1.Элемент1 = ВыборкаДетальныеЗаписи14.Элемент1;
Табл1_1.Элемент2 = ВыборкаДетальныеЗаписи14.Элемент2;
Табл1_1.Записать(); 
КонецЦикла;

Запрос15 = Новый Запрос;
Запрос15.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица4.Код,
		|   ВременнаяТаблица4.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица4.Элемент2 КАК Элемент2
		|ИЗ
		|	Справочник.ВременнаяТаблица4   КАК ВременнаяТаблица4";
РезультатЗапроса15 = Запрос15.Выполнить();
ВыборкаДетальныеЗаписи15 = РезультатЗапроса15.Выбрать();
Пока ВыборкаДетальныеЗаписи15.Следующий() Цикл			
u1 = справочники.ВременнаяТаблица4;
u1_1 = u1.НайтиПоКоду(ВыборкаДетальныеЗаписи15.Код).ПолучитьОбъект();
Если ПустаяСтрока (u1_1.Комментарий)тогда 
u1_1.Комментарий = "-";  
u1_1.Записать();
КонецЕсли; 

Запрос16 = Новый Запрос;
Запрос16.Текст = 
		"ВЫБРАТЬ  
		|   ВременнаяТаблица4.Код,
		|   ВременнаяТаблица4.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица4.Элемент2 КАК Элемент2
		|ИЗ
		|	Справочник.ВременнаяТаблица4   КАК ВременнаяТаблица4
		|ГДЕ 
		|ВременнаяТаблица4.Элемент1 = &ЭлМас8";
Запрос16.УстановитьПараметр("ЭлМас8",ВыборкаДетальныеЗаписи15.Элемент2);
РезультатЗапроса16 = Запрос16.Выполнить();
ВыборкаДетальныеЗаписи16 = РезультатЗапроса16.Выбрать();
		Пока ВыборкаДетальныеЗаписи16.Следующий() Цикл
		u2 = справочники.ВременнаяТаблица4;
		u2_1 = u2.НайтиПоКоду(ВыборкаДетальныеЗаписи16.Код).ПолучитьОбъект();
			Если ПустаяСтрока (u2_1.Комментарий) и ВыборкаДетальныеЗаписи15.Элемент1 = ВыборкаДетальныеЗаписи16.Элемент2 тогда	
		u2_1.Комментарий = "+";  
		u2_1.Записать();
			КонецЕсли; 	
		КонецЦикла;
КонецЦикла;

Запрос17 = Новый Запрос;
Запрос17.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица4.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица4.Элемент2 КАК Элемент2,
		|   ВременнаяТаблица4.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.ВременнаяТаблица4   КАК ВременнаяТаблица4";
РезультатЗапроса17 = Запрос17.Выполнить();
ВыборкаДетальныеЗаписи17 = РезультатЗапроса17.Выбрать();
Пока ВыборкаДетальныеЗаписи17.Следующий() Цикл 
Табл17 = Справочники.ВременнаяТаблица5;
Табл17_1 = Табл17.СоздатьЭлемент();
Табл17_1.Элемент1 = ВыборкаДетальныеЗаписи17.Элемент1;
Табл17_1.Элемент2 = ВыборкаДетальныеЗаписи17.Элемент2;
Табл17_1.Комментарий = ВыборкаДетальныеЗаписи17.Комментарий;
Табл17_1.Записать();
КонецЦикла;

Запрос18 = Новый Запрос;
Запрос18.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица5.Код,
		|   ВременнаяТаблица5.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица5.Элемент2 КАК Элемент2,
		|   ВременнаяТаблица5.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.ВременнаяТаблица5   КАК ВременнаяТаблица5";
РезультатЗапроса18 = Запрос18.Выполнить();
ВыборкаДетальныеЗаписи18 = РезультатЗапроса18.Выбрать();
Пока ВыборкаДетальныеЗаписи18.Следующий() Цикл
	колво1 = 0;

Запрос19 = Новый Запрос;
 Запрос19.Текст = 
		//"ВЫБРАТЬ
		//|   Заявки.НомерЗаявки КАК НомерЗаявки
		//|ИЗ
		//|	Справочник.Заявки   КАК Заявки
		//|ГДЕ 
		//|Заявки.СписокУсловий.ПолеЕсли = &Эл1изТ3";
		"ВЫБРАТЬ
		|   Заявки2.НомерЗаявки КАК НомерЗаявки
		|ИЗ
		|	Справочник.Заявки2   КАК Заявки2
		|ГДЕ 
		|Заявки2.ПолеЕсли = &Эл1изТ3";
Запрос19.УстановитьПараметр("Эл1изТ3",ВыборкаДетальныеЗаписи18.Элемент1); 
РезультатЗапроса19 = Запрос19.Выполнить();
ВыборкаДетальныеЗаписи19 = РезультатЗапроса19.Выбрать();
Пока ВыборкаДетальныеЗаписи19.Следующий() Цикл 
	Запрос20 = Новый Запрос;
	Запрос20.Текст = 
			//"ВЫБРАТЬ
			//|   Заявки.НомерЗаявки КАК НомерЗаявки,
			//|   ВременнаяТаблица5.Элемент2 КАК Элемент2
			//|ИЗ 
			//|	Справочник.ВременнаяТаблица5   КАК ВременнаяТаблица5,
			//|	Справочник.Заявки.НомерЗаявки КАК НомерЗаявки
			//|ГДЕ 
			//|Заявки.НомерЗаявки КАК НомерЗаявки = &НомЗ
			//|И
			//|Заявки.СписокУсловий.ПолеЕсли = &Эл2изТ3
			//|И
			//|Заявки.СписокУсловий.ПолеЕсли <> &Эл1изТ3";
			"ВЫБРАТЬ
			|   Заявки2.НомерЗаявки КАК НомерЗаявки,
			|   ВременнаяТаблица5.Элемент2 КАК Элемент2
			|ИЗ 
			|	Справочник.ВременнаяТаблица5   КАК ВременнаяТаблица5,
			|	Справочник.Заявки2 КАК Заявки2
			|ГДЕ 
			|Заявки2.НомерЗаявки = &НомЗ
			|И
			|Заявки2.ПолеЕсли = &Эл2изТ3
			|И
			|Заявки2.ПолеЕсли <> &Эл1изТ3";
	 Запрос20.УстановитьПараметр("НомЗ",ВыборкаДетальныеЗаписи19.НомерЗаявки);
	 Запрос20.УстановитьПараметр("Эл2изТ3",ВыборкаДетальныеЗаписи18.Элемент2);
	 Запрос20.УстановитьПараметр("Эл1изТ3",ВыборкаДетальныеЗаписи18.Элемент1); 
	РезультатЗапроса20 = Запрос20.Выполнить();
	ВыборкаДетальныеЗаписи20 = РезультатЗапроса20.Выбрать();
  		Если РезультатЗапроса20.Пустой() = истина тогда колво1 =колво1
		  иначе
		  колво1 = колво1 + 1;
	  КонецЕсли; 
	Табл20 = Справочники.ВременнаяТаблица5;
	Табл20_1 = Табл20.НайтиПоКоду(ВыборкаДетальныеЗаписи18.Код).ПолучитьОбъект();
	Табл20_1.КоличествоВстреч =  колво1;
	Табл20_1.Записать();
	
	КонецЦикла;
КонецЦикла; 

Запрос21 = Новый Запрос;
Запрос21.Текст = 
		"ВЫБРАТЬ
		|   ВременнаяТаблица5.Элемент1 КАК Элемент1,
		|   ВременнаяТаблица5.Элемент2 КАК Элемент2,
		|   ВременнаяТаблица5.КоличествоВстреч КАК КоличествоВстреч
		|ИЗ
		|	Справочник.ВременнаяТаблица5   КАК ВременнаяТаблица5";
РезультатЗапроса21 = Запрос21.Выполнить();
ВыборкаДетальныеЗаписи21 = РезультатЗапроса21.Выбрать();
Пока ВыборкаДетальныеЗаписи21.Следующий() Цикл 
Табл21 = Справочники.ВременнаяТаблица6;
Табл21_1 = Табл21.СоздатьЭлемент();
Табл21_1.Элемент1 = ВыборкаДетальныеЗаписи21.Элемент1;
Табл21_1.Элемент2 = ВыборкаДетальныеЗаписи21.Элемент2;
Табл21_1.КоличествоВстреч = ВыборкаДетальныеЗаписи21.КоличествоВстреч;
Табл21_1.Записать();

Табл21_2 = Табл21_1.КоличествоВстреч;
Если Табл21_2 < УровеньПоддержки тогда	
Табл21_1.УстановитьПометкуУдаления(Истина, Ложь)
КонецЕсли;
Если  Табл21_1.ПометкаУдаления = Истина тогда
Табл21_1.Удалить();	
КонецЕсли; 
КонецЦикла;
	//
КонецПроцедуры

&НаСервере
Функция ДоработатьСписок(таблШаблоны)
	
	таблНовая	= таблШаблоны.Скопировать();
	//таблНовая.Очистить();
	таблЕсли	= таблШаблоны.Скопировать();
	таблЕсли.Свернуть("ПолеЕсли");
	
	Запрос	= Новый Запрос(
							"ВЫБРАТЬ
							|	ВременнаяТаблица6.Элемент2 КАК Элемент2
							|ИЗ
							|	Справочник.ВременнаяТаблица6 КАК ВременнаяТаблица6
							|ГДЕ
							|	ВременнаяТаблица6.Элемент1 = &ПолеЕсли
							|
							|СГРУППИРОВАТЬ ПО
							|	ВременнаяТаблица6.Элемент2"
						  );
	Для Каждого строкаЕсли Из таблЕсли Цикл
		Запрос.УстановитьПараметр("ПолеЕсли", строкаЕсли.ПолеЕсли.Наименование);
		таблРезультата	= Запрос.Выполнить().Выгрузить();
		Если таблРезультата.Количество() <> 0 Тогда
			Для Каждого строкаРезультата Из таблРезультата Цикл
				ЗаписиНет	= Истина;
				Для Каждого строкаШаблона Из таблШаблоны Цикл
					Если строкаШаблона.ПолеЕсли.Наименование = строкаРезультата.Элемент2 Тогда
						ЗаписиНет	= Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЗаписиНет Тогда
					// ищем запись Элемент2 в справочнике Ключевые выражения, если не находим - создаем
					эл2КВ	= Справочники.КлючевыеВыражения.НайтиПоНаименованию(строкаРезультата.Элемент2, Истина);
					Если эл2КВ = Справочники.КлючевыеВыражения.ПустаяСсылка() Тогда // создаем новый элемент
						эл2КВ_объект				= Справочники.КлючевыеВыражения.СоздатьЭлемент();
						эл2КВ_объект.Наименование	= строкаРезультата.Элемент2;
						таблТо				= эл2КВ_объект.ЗначенияТо.Добавить();
						таблТо.ПолеТо		= строкаШаблона.ПолеЕсли.Наименование;
						Попытка
							эл2КВ_объект.Записать();
							эл2КВ	= эл2КВ_объект.Ссылка;
						Исключение
							Сообщить(ОписаниеОшибки())
						КонецПопытки;
					КонецЕсли;
					строкаНовая	= таблНовая.Добавить();
					строкаНовая.ПолеЕсли	= эл2КВ;
					строкаНовая.ПолеТо		= эл2КВ.ЗначенияТо[0].ПолеТо;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;
	
	Возврат таблНовая
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодсчетСуммПодвала();
	
	Элементы.ШаблоныВремяВыполнения.ГоризонтальноеПоложениеВПодвале	= ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ШаблоныКоличество.ГоризонтальноеПоложениеВПодвале		= ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ШаблоныИтоговоеВремя.ГоризонтальноеПоложениеВПодвале	= ГоризонтальноеПоложениеЭлемента.Право;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводВФайлWord(Команда)
	Попытка
		// Создание COM
		Word1C	= Новый COMОбъект("Word.Application");
		
		// Установим видимости объекта
		Word1C.Visible	= Истина;
		// Добавим документ в приложение
		Word1C.Documents.Add();
		// Придаем объекту статус активности
		ТекущийДокумент	= Word1C.ActiveDocument();
		// получение начального текста задачи
		НачальныйТекст	= ?(ЗначениеЗаполнено(Объект.НаименованиеЗаявки), Объект.НаименованиеЗаявки, "Требуется разработать отчет в формате MS Excel. Отчет должен отвечать следующим требованиям:") + Символы.ВК;
		// вывод проекта заявки
		строкаТекста	= НачальныйТекст;
		
		ТекущийДокумент.Paragraphs(1).Range.InsertAfter(строкаТекста);
		ТекущийДокумент.Paragraphs(1).Range.Font.Size = 12;
		ТекущийДокумент.Paragraphs(1).Range.Font.Name = "Times New Roman";
		ТекущийДокумент.Paragraphs(1).Range.ParagraphFormat.Alignment = 1;		
		
		масСтрокТекста	= ПолучитьТекстИзЗаявки();
		
		//строкаТекста	= строкаТекста + строкаТекстаЗаявки;
		Для Каждого строкаТекста Из масСтрокТекста Цикл
			Абзац	= ТекущийДокумент.Paragraphs.Add();
			//выводим в первый абзац наш текст, выделяем его и делаем шрифт 30 размера
			Абзац.Range.InsertAfter(строкаТекста);
			Абзац.Range.Font.Size = 12;
			Абзац.Range.Font.Name = "Times New Roman";
			Абзац.Range.ParagraphFormat.Alignment = 3;
		КонецЦикла;
		//активируем документ
		Word1C.Activate();
	Исключение
		Сообщить(ОписаниеОшибки())
	КонецПопытки;
	
	Сообщить("Формирование документа завершено.")
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстИзЗаявки()
	
	масСтрокТекста	= Новый Массив();
	Для Каждого строкаСписка Из Объект.Шаблоны Цикл
		Если строкаСписка.Отметка Тогда
			масСтрокТекста.Добавить(строкаСписка.ПолеТо + "... .");
		КонецЕсли;
	КонецЦикла;
	
	Возврат масСтрокТекста
	
КонецФункции

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого строкаТаблицы Из Объект.Шаблоны Цикл
		строкаТаблицы.Отметка	= Истина
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого строкаТаблицы Из Объект.Шаблоны Цикл
		строкаТаблицы.Отметка	= Ложь
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлажки(Команда)
	Для Каждого строкаТаблицы Из Объект.Шаблоны Цикл
		строкаТаблицы.Отметка	= Не строкаТаблицы.Отметка
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныПолеЕслиПриИзменении(Элемент)
	Этаформа.ТекущийЭлемент.ТекущиеДанные.ПолеТо	= ПоискТекста( Этаформа.ТекущийЭлемент.ТекущиеДанные.ПолеЕсли );
КонецПроцедуры

&НаСервере
Функция ПоискТекста( шаблон_если )
	
	шаблон_то	= Неопределено;
	таблКлючевыхВыражений	= ПолучитьСписокКлючевыхВыражений();
	Для Каждого строкаКлючевогоВыражения Из таблКлючевыхВыражений Цикл
		Если СтрНайти(НРег(шаблон_если), НРег(СокрЛП(строкаКлючевогоВыражения.ПолеЕсли)), НаправлениеПоиска.СНачала, 1, 1) > 0 Тогда
			шаблон_то	= строкаКлючевогоВыражения.ПолеТо;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат шаблон_то
	
КонецФункции

// { +++
&НаКлиенте
Процедура ШаблоныВремяВыполненияПриИзменении(Элемент)
	
	текСтрока				= ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	текСтрока.ИтоговоеВремя	= текСтрока.Количество * текСтрока.ВремяВыполнения;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныКоличествоПриИзменении(Элемент)
	
	текСтрока				= ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	текСтрока.ИтоговоеВремя	= текСтрока.Количество * текСтрока.ВремяВыполнения;
	
	ПодсчетСуммПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсчетСуммПодвала()
	
	ПодсчетСуммыПоля("Количество");
	ПодсчетСуммыПоля("ВремяВыполнения");
	ПодсчетСуммыПоля("ИтоговоеВремя");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсчетСуммыПоля(ИмяПоля)
	
	сумма_количества	= 0;
	Для Каждого строкаШаблона Из Объект.Шаблоны Цикл
		Если строкаШаблона.Отметка Тогда
			сумма_количества	= сумма_количества + строкаШаблона[ИмяПоля]
		КонецЕсли;
	КонецЦикла;
	
	Элементы["Шаблоны" + ИмяПоля].ТекстПодвала 			= сумма_количества;
	Объект.ВремяВыполненияПриПоследовательномВыполнении	= сумма_количества;
	Объект.ВремяВыполненияПриПараллельномВыполнении		= ПроверкаПараллельногоВыполнения();
	
	
КонецПроцедуры

&НаСервере
Функция ПоискПоляТо_и_Если(ПолеЕсли, ПолеТо)
	
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	КлючевыеВыраженияЗначенияТо.Ссылка КАК Ссылка,
	      	               |	КлючевыеВыраженияЗначенияТо.Частота КАК Частота,
	      	               |	КлючевыеВыраженияЗначенияТо.ВремяВыполнения КАК ВремяВыполнения,
	      	               |	КлючевыеВыраженияЗначенияТо.ДопускаетПараллельноеВыполнение КАК ДопускаетПараллельноеВыполнение
	      	               |ИЗ
	      	               |	Справочник.КлючевыеВыражения.ЗначенияТо КАК КлючевыеВыраженияЗначенияТо
	      	               |ГДЕ
	      	               |	КлючевыеВыраженияЗначенияТо.Ссылка.Наименование = &ПолеЕсли
	      	               |	И НЕ КлючевыеВыраженияЗначенияТо.Ссылка.ПометкаУдаления
	      	               |	И КлючевыеВыраженияЗначенияТо.ПолеТо = &ПолеТо");

	Запрос.УстановитьПараметр("ПолеЕсли", ПолеЕсли);
	Запрос.УстановитьПараметр("ПолеТо", ПолеТо);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ПроверкаПараллельногоВыполнения()
	
	ВремяВыполнения	= 0;
	Табл			= Объект.Шаблоны.Выгрузить();
	Для Каждого строкаШаблона Из Объект.Шаблоны Цикл
		
		Если строкаШаблона.Отметка Тогда
			
			// полеТо и Если в ключевых выражениях
			таблРез	= ПоискПоляТо_и_Если(строкаШаблона.ПолеЕсли.Наименование, строкаШаблона.ПолеТо);
			Если таблРез.Количество() > 0 Тогда
				ПолеНеНайдено	= Истина;
				Для Каждого строкаТабл Из Табл Цикл
					Если (строкаТабл.ПолеТо = таблРез[0].ДопускаетПараллельноеВыполнение) И ЗначениеЗаполнено(таблРез[0].ДопускаетПараллельноеВыполнение) Тогда
						Если строкаТабл.ВремяВыполнения > таблРез[0].ВремяВыполнения * строкаТабл.Количество Тогда
							ВремяВыполнения	= ВремяВыполнения + строкаШаблона.ИтоговоеВремя
						Иначе
							ВремяВыполнения	= ВремяВыполнения + таблРез[0].ВремяВыполнения * строкаТабл.Количество
						КонецЕсли;
						ПолеНеНайдено	= Ложь;
					КонецЕсли;
				КонецЦикла;
				Если ПолеНеНайдено Тогда
					ВремяВыполнения	= ВремяВыполнения + строкаШаблона.ИтоговоеВремя
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ВремяВыполнения
	
КонецФункции

&НаКлиенте
Процедура ШаблоныОтметкаПриИзменении(Элемент)
	ПодсчетСуммПодвала();
КонецПроцедуры

// --- }
