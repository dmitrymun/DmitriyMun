&НаКлиенте
Процедура ЗначенияТоДопускаетПараллельноеВыполнениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписЗнач	= Новый Массив;
	Табл		= ПолучитьСписокЗначений_ПолеТо();
	Для Каждого строкаЗТо Из Табл Цикл //Объект.ЗначенияТо Цикл
		СписЗнач.Добавить(строкаЗТо);
	КонецЦикла;
	Элементы.ЗначенияТоДопускаетПараллельноеВыполнение.СписокВыбора.ЗагрузитьЗначения(СписЗнач);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияТоПослеУдаления(Элемент)
	// проверяем есть в поле ДопускаетПараллельноеВыполнение удаленное значение,
	// если есть - очищаем
	ЗначенияТоПослеУдаленияНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЗначений_ПолеТо()
	
	Запрос	= Новый Запрос(
							"ВЫБРАТЬ
							|	КлючевыеВыраженияЗначенияТо.ПолеТо КАК ПолеТо
							|ИЗ
							|	Справочник.КлючевыеВыражения.ЗначенияТо КАК КлючевыеВыраженияЗначенияТо
							|ГДЕ
							|	НЕ КлючевыеВыраженияЗначенияТо.Ссылка.ПометкаУдаления"
						  );
	
	Результат	= Запрос.Выполнить().Выгрузить();
	
	Результат.Свернуть("ПолеТо");
	
	Возврат Результат.ВыгрузитьКолонку("ПолеТо")
	
КонецФункции

&НаСервере
Процедура ЗначенияТоПослеУдаленияНаСервере()
	
	Табл	= ПолучитьСписокЗначений_ПолеТо(); //Объект.ЗначенияТо.Выгрузить();
	Для Каждого строкаЗТо Из Объект.ЗначенияТо Цикл
		Если ЗначениеЗаполнено(строкаЗТо.ДопускаетПараллельноеВыполнение) Тогда
			ЗначенияНет	= Истина;
			Для Каждого строкаТабл Из Табл Цикл
				Если строкаЗТо.ДопускаетПараллельноеВыполнение = строкаТабл Тогда//.ПолеТо Тогда
					ЗначенияНет	= Ложь;
				КонецЕсли;
			КонецЦикла;
			
			Если ЗначенияНет Тогда
				строкаЗТо.ДопускаетПараллельноеВыполнение	= ""
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


